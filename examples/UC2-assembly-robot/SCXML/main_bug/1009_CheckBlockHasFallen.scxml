<scxml name="1009_CheckBlockHasFallen" version="1.0" model_src="" initial="idle" xmlns="http://www.w3.org/2005/07/scxml">
    <datamodel>
        <!-- TYPE block_down:int32 -->
        <data id="block_down" expr="-1"/>
    </datamodel>
    <state id="idle">
        <transition event="bt_1009_tick" target="send_req"/>
        <transition event="bt_1009_halt" target="idle">
            <send event="bt_1009_halt_response" target="1008_Inverter"/>
        </transition>
    </state>
    <state id="send_req">
        <onentry>
            <send event="srv_uc2__world__get_block_status_req_client_1009_CheckBlockHasFallen" target="srv_handler_uc2__world__get_block_status"/>
        </onentry>
        <transition target="wait_answer"/>
    </state>
    <state id="wait_answer">
        <transition event="srv_uc2__world__get_block_status_response_client_1009_CheckBlockHasFallen" target="idle">
            <assign location="block_down" expr="_event.data.ros_fields__block_down"/>
            <if cond="block_down &gt; 0">
                <send event="bt_1009_response" target="1008_Inverter">
                    <param name="status" expr="1"/>
                </send>
                <else/>
                <send event="bt_1009_response" target="1008_Inverter">
                    <param name="status" expr="2"/>
                </send>
            </if>
        </transition>
    </state>
</scxml>